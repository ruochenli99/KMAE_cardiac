
general:
  exp_name: k2i_segmentation_nomask
  use_slurm: False
  gpus: 0
  wandb_entity: ???
  debug: False
  exp_save_root: ???
  weights_save_frequency: 2
  acc_rate: &acc_rate [8]
  only_infer: &only_infer True
  infer_log: False

#  k_loss_list: &k_loss_list [ 'L1', 'HDR', 'HDR', 'HDR']
#  k_loss_weighting: &k_loss_weighting [ 1,1,1,1 ]
  k_loss_list: &k_loss_list ['L1']
  k_loss_weighting: &k_loss_weighting [1]
  k_loss_decay: &k_loss_decay 0.6
  HDR_eps: &HDR_eps 0.5

  yt_x_tuning: &yt_x_tuning 0
  xt_y_tuning: &xt_y_tuning 0
  xy_t_patch_tuning: &xy_t_patch_tuning 0

  ref_repl_prior_denoiser: &ref_repl_prior_denoiser True
  denoiser_detach: &denoiser_detach False
  loss_only_maskout: &loss_only_maskout False
  random_mask: &random_mask False
  k_finetune: &k_finetune False


data:

  data_root: ???
  cropped_img: True
  slices: center # center, all, center3, center5
  mask_pattern: normal-5 # VISTA, uniform, normal_{sensitivity} (the higher the sensitivity, the lower larger the variance)
  temporal_subsample: 2
  data_split: 5/5
  dataloader: UKBioBankKMAE
  acc_rate: *acc_rate
  load_mask_on_fly: True
  only_infer: *only_infer
  mask_root: ???

training:
  num_epochs: &epochs 300
  warmup_epoch: 4
  batch_size: 1
#  batch_size: 2
  num_workers: 4
#  restore_ckpt: False
#  restore_ckpt: ???

  restore_training: False
  use_mixed_precision: True  # differ # for complexCNN this must be set False
  eval_subj: ['6023125', '6023148', '6023216', '6023241']
  eval_slc: [5,6,5,5]
  eval_error_map_vmax: 0.04
  optim_weight_decay: 0.05
  random_mask: *random_mask

network:
  which: KMAEDownstream
  KspaceMAE: &KspaceMAE
    img_size: [25,128,128]
    patch_size: 4
    in_chans: 3 # todo, currently not used
    embed_dim: 512
    depth: 12
    num_heads: 16
    decoder_embed_dim: 512
    decoder_depth: 8
    decoder_num_heads: 16
    mlp_ratio: 4.
    norm_layer: ComplexLayerNormalization
    norm_pix_loss: False # todo, currently not used
    act_layer: cGELU
#    model_mode: classification
#    model_mode: reconstruction
#    model_mode: regression
    model_mode: segmentation
#    data_mode: image
    data_mode: kspae
  KMAEDownstream:
    <<: *KspaceMAE
#    depth: 6
#    num_heads: 8
#    decoder_embed_dim: 256
#    decoder_depth: 4
#    decoder_num_heads: 8

    in_chans: 384
    norm_layer: nn.LayerNorm
    act_layer: nn.GELU
    plane: 'yt'
    fourier_pos_emb: False
    k_finetune: *k_finetune
#    img_denoiser: *img_denoiser
    ref_repl_prior_denoiser: *ref_repl_prior_denoiser

    xt_y_tuning: *xt_y_tuning
    xt_y_embed_dim: 512
    xt_y_depth: 8
    xt_y_num_heads: 8
    denoiser_detach: *denoiser_detach

    yt_x_tuning: *yt_x_tuning
    yt_x_embed_dim: 512
    yt_x_depth: 8
    yt_x_num_heads: 8

    xy_t_patch_tuning: *xy_t_patch_tuning
    xy_t_patch_embed_dim: 512
    xy_t_patch_depth: 8
    xy_t_patch_num_heads: 8

loss_base: &loss
  k_recon_loss_combined:
    k_loss_decay: *k_loss_decay
    k_loss_list: *k_loss_list
    k_loss_weighting: *k_loss_weighting
    eps: *HDR_eps
  k_recon_loss:
    mode: L1
  photometric:
    mode: L2  # can be charbonnier, L1, L2
  HDR:
    eps: *HDR_eps
  psnr:
    max_value: on_fly
    magnitude_psnr: True
  KLPIPS:
    net_type: vgg
    data_convert: True
    detach: False
  use_weighting_mask: False
  cardiac_crop_quantitative_metric: False
  only_maskout: *loss_only_maskout

train_loss:
    <<: *loss
    which: ['k_recon_loss_combined', 'k_recon_loss', 'photometric']
    loss_weights: [1,1,1]


eval_loss:
    <<: *loss
    which: ['k_recon_loss','photometric','psnr']
    loss_weights: [1, 1, 1]

optimizer:
  which: AdamW
  AdamW:
    lr: &lr 0.0001
    eps: !!float 1e-8
    betas: [0.9, 0.95]
#    weight_decay: 0.00001

scheduler:
  lr: *lr
  min_lr: 0.0
  warmup_epochs: 5
  epochs: *epochs

eval_log:
  save_img: False
  eval_key: ['name', 'ref', 'recon', 'error_map','error_map_yt',
              'ref_yt', 'recon_yt', 'PSNR',
              'SSIM', 'NRMSE', 'PSNR_center',
              'SSIM_center', 'NRMSE_center', 'PSNR_yt']
  save_mean_std: ['PSNR','SSIM', 'NRMSE', 'PSNR_center','SSIM_center', 'NRMSE_center', 'PSNR_yt']
  save_local: False
  save_dir: 'results'
#  save_dir: ???
  save_local_item: ['ref', 'recon', 'error_map', 'ref_yt', 'recon_yt', 'error_map_yt']
  im_crop_size: [16, 172, 0, 156]
#  im_crop_size: null